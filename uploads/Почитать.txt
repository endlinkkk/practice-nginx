property - ленивый (все ленивые операторы чекнуть)
создания генератора 3 способа - yeild, list_complehension_ __iter__, __next__
параллельность и конкурентность 
какими способами можно сделать конкурентность и параллельность 
чем отличается процесс от потока
зачем нужна многопоточность
механизмы синхронизации элементов параллельности 
сборщик мусора
prefetch_related 
select_related
Моргунов книга SQL
7 пунктов нормализации
когда 7ормализация не полезна
в чем отличие виртуализации от контейнерезации?
чистая архитектура (Роберт Мартин книга)


Методы авторизации:
- Basic (логин и пароль в хэдэре, самая обычная)
- key (в params api_key или в хэдэр токен, т.е. Авторизация по неизменяемому токену, токен в базе)
- сессия (логин + пароль, бекенд вернул сессию, сессию положили в куки и дальше ходим с Куками и куки проверяются по базе)
- jwt (также ходим с логином и паролем, бекенд возвращает токен, но токен подписанный, он проверяется без бд. Проблема в том, что его не отзывают, не хранится в бд, поэтому его сложнее вырубить, чтобы его вырубить надо обозначить в сессии что токен не действителен)
- OAUTH2 (идем в сервис, сервис возвращает урл и пользователь переходит по этому урлу, затем там пользователь вводит логин/пароль или кнопка подтвердить, потом сервис редиректит обратно на бекенд с определенными параметрами и на бекенде формируется пользователь на основании этих данных)
- ssl (чтобы сервисы знали друг друга, во внутренней сети обычно используется)
